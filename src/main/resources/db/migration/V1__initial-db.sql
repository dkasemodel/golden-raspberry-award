--create table award (
--  id bigint generated by default as identity,
--  created_at timestamp default now(),
--  deleted_at timestamp(6),
--  external_id uuid default random_uuid(),
--  updated_at timestamp default now(),
--  winner boolean not null,
--  released_year smallint not null,
--  movie_id bigint, primary key (id)
--);
--
--create table movie (
--  id bigint generated by default as identity,
--  created_at timestamp default now(),
--  deleted_at timestamp(6),
--  external_id uuid default random_uuid(),
--  updated_at timestamp default now(),
--  title varchar(255) not null,
--  primary key (id)
--);
--
--create table movie_producers (
--  movie_id bigint not null,
--  producers_id bigint not null,
--  primary key (movie_id, producers_id)
--);
--
--create table movie_studios (
--  movie_id bigint not null,
--  studios_id bigint not null,
--  primary key (movie_id, studios_id)
--);
--
--create table producer (
--  id bigint generated by default as identity,
--  created_at timestamp default now(),
--  deleted_at timestamp(6),
--  external_id uuid default random_uuid(),
--  updated_at timestamp default now(),
--  name varchar(255) not null,
--  primary key (id)
--);
--
--create table producer_movies (
--  producer_id bigint not null,
--  movies_id bigint not null,
--  primary key (producer_id, movies_id)
--);
--
--create table studio (
--  id bigint generated by default as identity,
--  created_at timestamp default now(),
--  deleted_at timestamp(6),
--  external_id uuid default random_uuid(),
--  updated_at timestamp default now(),
--  name varchar(255) not null,
--  primary key (id)
--);
--
--alter table if exists award add constraint award_movie_fk foreign key (movie_id) references movie;
--alter table if exists movie_producers add constraint movie_producers_produce_fk foreign key (producers_id) references producer;
--alter table if exists movie_producers add constraint movie_producers_movie_fk foreign key (movie_id) references movie;
--alter table if exists movie_studios add constraint movie_studios_studio_fk foreign key (studios_id) references studio;
--alter table if exists movie_studios add constraint movie_studios_movie_fk foreign key (movie_id) references movie;
--alter table if exists producer_movies add constraint producer_movies_movie_fk foreign key (movies_id) references movie;
--alter table if exists producer_movies add constraint producer_movies_producer_fk foreign key (producer_id) references producer;
--
--CREATE TRIGGER award_tgr_bu
--AFTER UPDATE ON award
--FOR EACH ROW
--CALL 'com.kasemodel.goldenraspberryaward.infra.persistence.trigger.UpdatedAtTrigger';
--
----CREATE TRIGGER movie_tgr_bu
----AFTER UPDATE ON movie
----CALL 'com.kasemodel.goldenraspberryaward.infra.persistence.trigger.UpdatedAtTrigger';
----
----CREATE TRIGGER producer_tgr_bu
----AFTER UPDATE ON producer
----CALL 'com.kasemodel.goldenraspberryaward.infra.persistence.trigger.UpdatedAtTrigger';
----
----CREATE TRIGGER studio_tgr_bu
----AFTER UPDATE ON studio
----CALL 'com.kasemodel.goldenraspberryaward.infra.persistence.trigger.UpdatedAtTrigger';
